(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@500&display=swap);"]),i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300&display=swap);"]),i.push([n.id,':root {\n  --header-color: #0d9488;\n  --header-text-color: white;\n  --nav-color: #2dd4bf;\n  --nav-text-color: white;\n  --page-color: #ccfbf1;\n  --page-text-color: white;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#container {\n  height: 100dvh;\n  display: grid;\n  grid-template-rows: 1.5fr 14.5fr 1fr;\n}\n\n#header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: var(--header-color);\n  color: var(--header-text-color);\n}\n#body {\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n}\n#nav {\n  display: flex;\n  flex-direction: column;\n  padding-top: 100px;\n  gap: 60px;\n  background-color: var(--nav-color);\n  color: var(--nav-text-color);\n}\n#page {\n  background-color: var(--page-color);\n  color: var(--page-text-color);\n}\n#footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--header-color);\n}\n\n/*=====HEADER STUFF=======*/\n.logo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 26px;\n  padding: 10px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n.user-profile {\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n\n/*=====NAVIGATION MENU=======*/\n.nav-item-container,\n.nav-setting-container {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 15%;\n}\n.nav-item {\n  font-size: 20px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n  padding: 8px;\n}\n.nav-active {\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  background-color: var(--header-color);\n  transform: translateX(14px);\n}\n\n/*=====FOOTER=======*/\n.footer-content {\n  color: var(--header-text-color);\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAGA;EACE,uBAAuB;EACvB,0BAA0B;EAC1B,oBAAoB;EACpB,uBAAuB;EACvB,qBAAqB;EACrB,wBAAwB;AAC1B;;AAEA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,cAAc;EACd,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,kBAAkB;EAClB,mBAAmB;EACnB,qCAAqC;EACrC,+BAA+B;AACjC;AACA;EACE,aAAa;EACb,8BAA8B;AAChC;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,SAAS;EACT,kCAAkC;EAClC,4BAA4B;AAC9B;AACA;EACE,mCAAmC;EACnC,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,qCAAqC;AACvC;;AAEA,2BAA2B;AAC3B;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,eAAe;EACf,aAAa;EACb,4CAA4C;AAC9C;AACA;EACE,4CAA4C;AAC9C;;AAEA,8BAA8B;AAC9B;;EAEE,aAAa;EACb,sBAAsB;EACtB,QAAQ;EACR,gBAAgB;AAClB;AACA;EACE,eAAe;EACf,4CAA4C;EAC5C,YAAY;AACd;AACA;EACE,2BAA2B;EAC3B,8BAA8B;EAC9B,6BAA6B;EAC7B,gCAAgC;EAChC,qCAAqC;EACrC,2BAA2B;AAC7B;;AAEA,qBAAqB;AACrB;EACE,+BAA+B;EAC/B,4CAA4C;AAC9C",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@500&display=swap");\n@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300&display=swap");\n\n:root {\n  --header-color: #0d9488;\n  --header-text-color: white;\n  --nav-color: #2dd4bf;\n  --nav-text-color: white;\n  --page-color: #ccfbf1;\n  --page-text-color: white;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#container {\n  height: 100dvh;\n  display: grid;\n  grid-template-rows: 1.5fr 14.5fr 1fr;\n}\n\n#header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: var(--header-color);\n  color: var(--header-text-color);\n}\n#body {\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n}\n#nav {\n  display: flex;\n  flex-direction: column;\n  padding-top: 100px;\n  gap: 60px;\n  background-color: var(--nav-color);\n  color: var(--nav-text-color);\n}\n#page {\n  background-color: var(--page-color);\n  color: var(--page-text-color);\n}\n#footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--header-color);\n}\n\n/*=====HEADER STUFF=======*/\n.logo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 26px;\n  padding: 10px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n.user-profile {\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n\n/*=====NAVIGATION MENU=======*/\n.nav-item-container,\n.nav-setting-container {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 15%;\n}\n.nav-item {\n  font-size: 20px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n  padding: 8px;\n}\n.nav-active {\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  background-color: var(--header-color);\n  transform: translateX(14px);\n}\n\n/*=====FOOTER=======*/\n.footer-content {\n  color: var(--header-text-color);\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=r.base?c[0]+r.base:c[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),A=0;A<a.length;A++){var l=t(a[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{const n=(()=>{const n=()=>{const n=document.querySelectorAll(".nav-item");n.forEach((e=>{e.addEventListener("click",(()=>{n.forEach((n=>{"nav-item nav-active"==n.classList&&n.classList.remove("nav-active"),e.classList.add("nav-active")}))}))}))};return{navItemClickStyle:n,initiateListeners:()=>{n()}}})();var e=t(379),r=t.n(e),o=t(795),a=t.n(o),i=t(569),s=t.n(i),c=t(565),A=t.n(c),l=t(216),d=t.n(l),p=t(589),u=t.n(p),f=t(28),m={};m.styleTagTransform=u(),m.setAttributes=A(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),r()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const C=(n,e,t)=>{const r=document.createElement("div");"id"==e?r.id=t:"class"==e&&r.classList.add(t),n.appendChild(r)},v=(n,e,t)=>{const r=document.createElement("div");r.classList.add(t),r.textContent=e,n.appendChild(r)},g=(()=>{const n=document.getElementById("container"),e="header",t="body",r="nav",o="footer";return{createSkeleton:()=>{C(n,"id",e),C(n,"id",t),C(document.getElementById(t),"id",r),C(document.getElementById(r),"class","nav-item-container"),C(document.getElementById(r),"class","nav-setting-container"),C(document.getElementById(t),"id","page"),C(n,"id",o)},renderAllElements:()=>{v(document.getElementById(e),"Todooz","logo"),v(document.getElementById(e),"User's Name","user-profile"),v(document.getElementById(o),"Copyright @ChrisOlsen 2023","footer-content"),v(document.querySelector(".nav-item-container"),"Reminders","nav-item"),v(document.querySelector(".nav-item-container"),"Journal","nav-item"),v(document.querySelector(".nav-setting-container"),"Settings","nav-item"),v(document.querySelector(".nav-setting-container"),"About Us","nav-item")}}})();g.createSkeleton(),g.renderAllElements(),n.initiateListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,