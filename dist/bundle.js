(()=>{var e={168:(e,n,t)=>{const r=t(874),o={};for(const e of Object.keys(r))o[r[e]]=e;const a={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};e.exports=a;for(const e of Object.keys(a)){if(!("channels"in a[e]))throw new Error("missing channels property: "+e);if(!("labels"in a[e]))throw new Error("missing channel labels property: "+e);if(a[e].labels.length!==a[e].channels)throw new Error("channel and label counts mismatch: "+e);const{channels:n,labels:t}=a[e];delete a[e].channels,delete a[e].labels,Object.defineProperty(a[e],"channels",{value:n}),Object.defineProperty(a[e],"labels",{value:t})}a.rgb.hsl=function(e){const n=e[0]/255,t=e[1]/255,r=e[2]/255,o=Math.min(n,t,r),a=Math.max(n,t,r),i=a-o;let l,s;a===o?l=0:n===a?l=(t-r)/i:t===a?l=2+(r-n)/i:r===a&&(l=4+(n-t)/i),l=Math.min(60*l,360),l<0&&(l+=360);const c=(o+a)/2;return s=a===o?0:c<=.5?i/(a+o):i/(2-a-o),[l,100*s,100*c]},a.rgb.hsv=function(e){let n,t,r,o,a;const i=e[0]/255,l=e[1]/255,s=e[2]/255,c=Math.max(i,l,s),d=c-Math.min(i,l,s),u=function(e){return(c-e)/6/d+.5};return 0===d?(o=0,a=0):(a=d/c,n=u(i),t=u(l),r=u(s),i===c?o=r-t:l===c?o=1/3+n-r:s===c&&(o=2/3+t-n),o<0?o+=1:o>1&&(o-=1)),[360*o,100*a,100*c]},a.rgb.hwb=function(e){const n=e[0],t=e[1];let r=e[2];const o=a.rgb.hsl(e)[0],i=1/255*Math.min(n,Math.min(t,r));return r=1-1/255*Math.max(n,Math.max(t,r)),[o,100*i,100*r]},a.rgb.cmyk=function(e){const n=e[0]/255,t=e[1]/255,r=e[2]/255,o=Math.min(1-n,1-t,1-r);return[100*((1-n-o)/(1-o)||0),100*((1-t-o)/(1-o)||0),100*((1-r-o)/(1-o)||0),100*o]},a.rgb.keyword=function(e){const n=o[e];if(n)return n;let t,a=1/0;for(const n of Object.keys(r)){const o=(l=r[n],((i=e)[0]-l[0])**2+(i[1]-l[1])**2+(i[2]-l[2])**2);o<a&&(a=o,t=n)}var i,l;return t},a.keyword.rgb=function(e){return r[e]},a.rgb.xyz=function(e){let n=e[0]/255,t=e[1]/255,r=e[2]/255;return n=n>.04045?((n+.055)/1.055)**2.4:n/12.92,t=t>.04045?((t+.055)/1.055)**2.4:t/12.92,r=r>.04045?((r+.055)/1.055)**2.4:r/12.92,[100*(.4124*n+.3576*t+.1805*r),100*(.2126*n+.7152*t+.0722*r),100*(.0193*n+.1192*t+.9505*r)]},a.rgb.lab=function(e){const n=a.rgb.xyz(e);let t=n[0],r=n[1],o=n[2];return t/=95.047,r/=100,o/=108.883,t=t>.008856?t**(1/3):7.787*t+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,o=o>.008856?o**(1/3):7.787*o+16/116,[116*r-16,500*(t-r),200*(r-o)]},a.hsl.rgb=function(e){const n=e[0]/360,t=e[1]/100,r=e[2]/100;let o,a,i;if(0===t)return i=255*r,[i,i,i];o=r<.5?r*(1+t):r+t-r*t;const l=2*r-o,s=[0,0,0];for(let e=0;e<3;e++)a=n+1/3*-(e-1),a<0&&a++,a>1&&a--,i=6*a<1?l+6*(o-l)*a:2*a<1?o:3*a<2?l+(o-l)*(2/3-a)*6:l,s[e]=255*i;return s},a.hsl.hsv=function(e){const n=e[0];let t=e[1]/100,r=e[2]/100,o=t;const a=Math.max(r,.01);return r*=2,t*=r<=1?r:2-r,o*=a<=1?a:2-a,[n,100*(0===r?2*o/(a+o):2*t/(r+t)),(r+t)/2*100]},a.hsv.rgb=function(e){const n=e[0]/60,t=e[1]/100;let r=e[2]/100;const o=Math.floor(n)%6,a=n-Math.floor(n),i=255*r*(1-t),l=255*r*(1-t*a),s=255*r*(1-t*(1-a));switch(r*=255,o){case 0:return[r,s,i];case 1:return[l,r,i];case 2:return[i,r,s];case 3:return[i,l,r];case 4:return[s,i,r];case 5:return[r,i,l]}},a.hsv.hsl=function(e){const n=e[0],t=e[1]/100,r=e[2]/100,o=Math.max(r,.01);let a,i;i=(2-t)*r;const l=(2-t)*o;return a=t*o,a/=l<=1?l:2-l,a=a||0,i/=2,[n,100*a,100*i]},a.hwb.rgb=function(e){const n=e[0]/360;let t=e[1]/100,r=e[2]/100;const o=t+r;let a;o>1&&(t/=o,r/=o);const i=Math.floor(6*n),l=1-r;a=6*n-i,0!=(1&i)&&(a=1-a);const s=t+a*(l-t);let c,d,u;switch(i){default:case 6:case 0:c=l,d=s,u=t;break;case 1:c=s,d=l,u=t;break;case 2:c=t,d=l,u=s;break;case 3:c=t,d=s,u=l;break;case 4:c=s,d=t,u=l;break;case 5:c=l,d=t,u=s}return[255*c,255*d,255*u]},a.cmyk.rgb=function(e){const n=e[0]/100,t=e[1]/100,r=e[2]/100,o=e[3]/100;return[255*(1-Math.min(1,n*(1-o)+o)),255*(1-Math.min(1,t*(1-o)+o)),255*(1-Math.min(1,r*(1-o)+o))]},a.xyz.rgb=function(e){const n=e[0]/100,t=e[1]/100,r=e[2]/100;let o,a,i;return o=3.2406*n+-1.5372*t+-.4986*r,a=-.9689*n+1.8758*t+.0415*r,i=.0557*n+-.204*t+1.057*r,o=o>.0031308?1.055*o**(1/2.4)-.055:12.92*o,a=a>.0031308?1.055*a**(1/2.4)-.055:12.92*a,i=i>.0031308?1.055*i**(1/2.4)-.055:12.92*i,o=Math.min(Math.max(0,o),1),a=Math.min(Math.max(0,a),1),i=Math.min(Math.max(0,i),1),[255*o,255*a,255*i]},a.xyz.lab=function(e){let n=e[0],t=e[1],r=e[2];return n/=95.047,t/=100,r/=108.883,n=n>.008856?n**(1/3):7.787*n+16/116,t=t>.008856?t**(1/3):7.787*t+16/116,r=r>.008856?r**(1/3):7.787*r+16/116,[116*t-16,500*(n-t),200*(t-r)]},a.lab.xyz=function(e){let n,t,r;t=(e[0]+16)/116,n=e[1]/500+t,r=t-e[2]/200;const o=t**3,a=n**3,i=r**3;return t=o>.008856?o:(t-16/116)/7.787,n=a>.008856?a:(n-16/116)/7.787,r=i>.008856?i:(r-16/116)/7.787,n*=95.047,t*=100,r*=108.883,[n,t,r]},a.lab.lch=function(e){const n=e[0],t=e[1],r=e[2];let o;return o=360*Math.atan2(r,t)/2/Math.PI,o<0&&(o+=360),[n,Math.sqrt(t*t+r*r),o]},a.lch.lab=function(e){const n=e[0],t=e[1],r=e[2]/360*2*Math.PI;return[n,t*Math.cos(r),t*Math.sin(r)]},a.rgb.ansi16=function(e,n=null){const[t,r,o]=e;let i=null===n?a.rgb.hsv(e)[2]:n;if(i=Math.round(i/50),0===i)return 30;let l=30+(Math.round(o/255)<<2|Math.round(r/255)<<1|Math.round(t/255));return 2===i&&(l+=60),l},a.hsv.ansi16=function(e){return a.rgb.ansi16(a.hsv.rgb(e),e[2])},a.rgb.ansi256=function(e){const n=e[0],t=e[1],r=e[2];return n===t&&t===r?n<8?16:n>248?231:Math.round((n-8)/247*24)+232:16+36*Math.round(n/255*5)+6*Math.round(t/255*5)+Math.round(r/255*5)},a.ansi16.rgb=function(e){let n=e%10;if(0===n||7===n)return e>50&&(n+=3.5),n=n/10.5*255,[n,n,n];const t=.5*(1+~~(e>50));return[(1&n)*t*255,(n>>1&1)*t*255,(n>>2&1)*t*255]},a.ansi256.rgb=function(e){if(e>=232){const n=10*(e-232)+8;return[n,n,n]}let n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},a.rgb.hex=function(e){const n=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(n.length)+n},a.hex.rgb=function(e){const n=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!n)return[0,0,0];let t=n[0];3===n[0].length&&(t=t.split("").map((e=>e+e)).join(""));const r=parseInt(t,16);return[r>>16&255,r>>8&255,255&r]},a.rgb.hcg=function(e){const n=e[0]/255,t=e[1]/255,r=e[2]/255,o=Math.max(Math.max(n,t),r),a=Math.min(Math.min(n,t),r),i=o-a;let l,s;return l=i<1?a/(1-i):0,s=i<=0?0:o===n?(t-r)/i%6:o===t?2+(r-n)/i:4+(n-t)/i,s/=6,s%=1,[360*s,100*i,100*l]},a.hsl.hcg=function(e){const n=e[1]/100,t=e[2]/100,r=t<.5?2*n*t:2*n*(1-t);let o=0;return r<1&&(o=(t-.5*r)/(1-r)),[e[0],100*r,100*o]},a.hsv.hcg=function(e){const n=e[1]/100,t=e[2]/100,r=n*t;let o=0;return r<1&&(o=(t-r)/(1-r)),[e[0],100*r,100*o]},a.hcg.rgb=function(e){const n=e[0]/360,t=e[1]/100,r=e[2]/100;if(0===t)return[255*r,255*r,255*r];const o=[0,0,0],a=n%1*6,i=a%1,l=1-i;let s=0;switch(Math.floor(a)){case 0:o[0]=1,o[1]=i,o[2]=0;break;case 1:o[0]=l,o[1]=1,o[2]=0;break;case 2:o[0]=0,o[1]=1,o[2]=i;break;case 3:o[0]=0,o[1]=l,o[2]=1;break;case 4:o[0]=i,o[1]=0,o[2]=1;break;default:o[0]=1,o[1]=0,o[2]=l}return s=(1-t)*r,[255*(t*o[0]+s),255*(t*o[1]+s),255*(t*o[2]+s)]},a.hcg.hsv=function(e){const n=e[1]/100,t=n+e[2]/100*(1-n);let r=0;return t>0&&(r=n/t),[e[0],100*r,100*t]},a.hcg.hsl=function(e){const n=e[1]/100,t=e[2]/100*(1-n)+.5*n;let r=0;return t>0&&t<.5?r=n/(2*t):t>=.5&&t<1&&(r=n/(2*(1-t))),[e[0],100*r,100*t]},a.hcg.hwb=function(e){const n=e[1]/100,t=n+e[2]/100*(1-n);return[e[0],100*(t-n),100*(1-t)]},a.hwb.hcg=function(e){const n=e[1]/100,t=1-e[2]/100,r=t-n;let o=0;return r<1&&(o=(t-r)/(1-r)),[e[0],100*r,100*o]},a.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},a.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},a.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},a.gray.hsl=function(e){return[0,0,e[0]]},a.gray.hsv=a.gray.hsl,a.gray.hwb=function(e){return[0,100,e[0]]},a.gray.cmyk=function(e){return[0,0,0,e[0]]},a.gray.lab=function(e){return[e[0],0,0]},a.gray.hex=function(e){const n=255&Math.round(e[0]/100*255),t=((n<<16)+(n<<8)+n).toString(16).toUpperCase();return"000000".substring(t.length)+t},a.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},85:(e,n,t)=>{const r=t(168),o=t(111),a={};Object.keys(r).forEach((e=>{a[e]={},Object.defineProperty(a[e],"channels",{value:r[e].channels}),Object.defineProperty(a[e],"labels",{value:r[e].labels});const n=o(e);Object.keys(n).forEach((t=>{const r=n[t];a[e][t]=function(e){const n=function(...n){const t=n[0];if(null==t)return t;t.length>1&&(n=t);const r=e(n);if("object"==typeof r)for(let e=r.length,n=0;n<e;n++)r[n]=Math.round(r[n]);return r};return"conversion"in e&&(n.conversion=e.conversion),n}(r),a[e][t].raw=function(e){const n=function(...n){const t=n[0];return null==t?t:(t.length>1&&(n=t),e(n))};return"conversion"in e&&(n.conversion=e.conversion),n}(r)}))})),e.exports=a},111:(e,n,t)=>{const r=t(168);function o(e,n){return function(t){return n(e(t))}}function a(e,n){const t=[n[e].parent,e];let a=r[n[e].parent][e],i=n[e].parent;for(;n[i].parent;)t.unshift(n[i].parent),a=o(r[n[i].parent][i],a),i=n[i].parent;return a.conversion=t,a}e.exports=function(e){const n=function(e){const n=function(){const e={},n=Object.keys(r);for(let t=n.length,r=0;r<t;r++)e[n[r]]={distance:-1,parent:null};return e}(),t=[e];for(n[e].distance=0;t.length;){const e=t.pop(),o=Object.keys(r[e]);for(let r=o.length,a=0;a<r;a++){const r=o[a],i=n[r];-1===i.distance&&(i.distance=n[e].distance+1,i.parent=e,t.unshift(r))}}return n}(e),t={},o=Object.keys(n);for(let e=o.length,r=0;r<e;r++){const e=o[r];null!==n[e].parent&&(t[e]=a(e,n))}return t}},874:e=>{"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},818:(e,n,t)=>{var r=t(874),o=t(851),a=Object.hasOwnProperty,i=Object.create(null);for(var l in r)a.call(r,l)&&(i[r[l]]=l);var s=e.exports={to:{},get:{}};function c(e,n,t){return Math.min(Math.max(n,e),t)}function d(e){var n=Math.round(e).toString(16).toUpperCase();return n.length<2?"0"+n:n}s.get=function(e){var n,t;switch(e.substring(0,3).toLowerCase()){case"hsl":n=s.get.hsl(e),t="hsl";break;case"hwb":n=s.get.hwb(e),t="hwb";break;default:n=s.get.rgb(e),t="rgb"}return n?{model:t,value:n}:null},s.get.rgb=function(e){if(!e)return null;var n,t,o,i=[0,0,0,1];if(n=e.match(/^#([a-f0-9]{6})([a-f0-9]{2})?$/i)){for(o=n[2],n=n[1],t=0;t<3;t++){var l=2*t;i[t]=parseInt(n.slice(l,l+2),16)}o&&(i[3]=parseInt(o,16)/255)}else if(n=e.match(/^#([a-f0-9]{3,4})$/i)){for(o=(n=n[1])[3],t=0;t<3;t++)i[t]=parseInt(n[t]+n[t],16);o&&(i[3]=parseInt(o+o,16)/255)}else if(n=e.match(/^rgba?\(\s*([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)(?=[\s,])\s*(?:,\s*)?([+-]?\d+)\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/)){for(t=0;t<3;t++)i[t]=parseInt(n[t+1],0);n[4]&&(n[5]?i[3]=.01*parseFloat(n[4]):i[3]=parseFloat(n[4]))}else{if(!(n=e.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*,?\s*([+-]?[\d\.]+)\%\s*(?:[,|\/]\s*([+-]?[\d\.]+)(%?)\s*)?\)$/)))return(n=e.match(/^(\w+)$/))?"transparent"===n[1]?[0,0,0,0]:a.call(r,n[1])?((i=r[n[1]])[3]=1,i):null:null;for(t=0;t<3;t++)i[t]=Math.round(2.55*parseFloat(n[t+1]));n[4]&&(n[5]?i[3]=.01*parseFloat(n[4]):i[3]=parseFloat(n[4]))}for(t=0;t<3;t++)i[t]=c(i[t],0,255);return i[3]=c(i[3],0,1),i},s.get.hsl=function(e){if(!e)return null;var n=e.match(/^hsla?\(\s*([+-]?(?:\d{0,3}\.)?\d+)(?:deg)?\s*,?\s*([+-]?[\d\.]+)%\s*,?\s*([+-]?[\d\.]+)%\s*(?:[,|\/]\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);if(n){var t=parseFloat(n[4]);return[(parseFloat(n[1])%360+360)%360,c(parseFloat(n[2]),0,100),c(parseFloat(n[3]),0,100),c(isNaN(t)?1:t,0,1)]}return null},s.get.hwb=function(e){if(!e)return null;var n=e.match(/^hwb\(\s*([+-]?\d{0,3}(?:\.\d+)?)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?(?=\.\d|\d)(?:0|[1-9]\d*)?(?:\.\d*)?(?:[eE][+-]?\d+)?)\s*)?\)$/);if(n){var t=parseFloat(n[4]);return[(parseFloat(n[1])%360+360)%360,c(parseFloat(n[2]),0,100),c(parseFloat(n[3]),0,100),c(isNaN(t)?1:t,0,1)]}return null},s.to.hex=function(){var e=o(arguments);return"#"+d(e[0])+d(e[1])+d(e[2])+(e[3]<1?d(Math.round(255*e[3])):"")},s.to.rgb=function(){var e=o(arguments);return e.length<4||1===e[3]?"rgb("+Math.round(e[0])+", "+Math.round(e[1])+", "+Math.round(e[2])+")":"rgba("+Math.round(e[0])+", "+Math.round(e[1])+", "+Math.round(e[2])+", "+e[3]+")"},s.to.rgb.percent=function(){var e=o(arguments),n=Math.round(e[0]/255*100),t=Math.round(e[1]/255*100),r=Math.round(e[2]/255*100);return e.length<4||1===e[3]?"rgb("+n+"%, "+t+"%, "+r+"%)":"rgba("+n+"%, "+t+"%, "+r+"%, "+e[3]+")"},s.to.hsl=function(){var e=o(arguments);return e.length<4||1===e[3]?"hsl("+e[0]+", "+e[1]+"%, "+e[2]+"%)":"hsla("+e[0]+", "+e[1]+"%, "+e[2]+"%, "+e[3]+")"},s.to.hwb=function(){var e=o(arguments),n="";return e.length>=4&&1!==e[3]&&(n=", "+e[3]),"hwb("+e[0]+", "+e[1]+"%, "+e[2]+"%"+n+")"},s.to.keyword=function(e){return i[e.slice(0,3)]}},767:(e,n,t)=>{const r=t(818),o=t(85),a=["keyword","gray","hex"],i={};for(const e of Object.keys(o))i[[...o[e].labels].sort().join("")]=e;const l={};function s(e,n){if(!(this instanceof s))return new s(e,n);if(n&&n in a&&(n=null),n&&!(n in o))throw new Error("Unknown model: "+n);let t,c;if(null==e)this.model="rgb",this.color=[0,0,0],this.valpha=1;else if(e instanceof s)this.model=e.model,this.color=[...e.color],this.valpha=e.valpha;else if("string"==typeof e){const n=r.get(e);if(null===n)throw new Error("Unable to parse color from string: "+e);this.model=n.model,c=o[this.model].channels,this.color=n.value.slice(0,c),this.valpha="number"==typeof n.value[c]?n.value[c]:1}else if(e.length>0){this.model=n||"rgb",c=o[this.model].channels;const t=Array.prototype.slice.call(e,0,c);this.color=A(t,c),this.valpha="number"==typeof e[c]?e[c]:1}else if("number"==typeof e)this.model="rgb",this.color=[e>>16&255,e>>8&255,255&e],this.valpha=1;else{this.valpha=1;const n=Object.keys(e);"alpha"in e&&(n.splice(n.indexOf("alpha"),1),this.valpha="number"==typeof e.alpha?e.alpha:0);const r=n.sort().join("");if(!(r in i))throw new Error("Unable to parse color from object: "+JSON.stringify(e));this.model=i[r];const{labels:a}=o[this.model],l=[];for(t=0;t<a.length;t++)l.push(e[a[t]]);this.color=A(l)}if(l[this.model])for(c=o[this.model].channels,t=0;t<c;t++){const e=l[this.model][t];e&&(this.color[t]=e(this.color[t]))}this.valpha=Math.max(0,Math.min(1,this.valpha)),Object.freeze&&Object.freeze(this)}s.prototype={toString(){return this.string()},toJSON(){return this[this.model]()},string(e){let n=this.model in r.to?this:this.rgb();n=n.round("number"==typeof e?e:1);const t=1===n.valpha?n.color:[...n.color,this.valpha];return r.to[n.model](t)},percentString(e){const n=this.rgb().round("number"==typeof e?e:1),t=1===n.valpha?n.color:[...n.color,this.valpha];return r.to.rgb.percent(t)},array(){return 1===this.valpha?[...this.color]:[...this.color,this.valpha]},object(){const e={},{channels:n}=o[this.model],{labels:t}=o[this.model];for(let r=0;r<n;r++)e[t[r]]=this.color[r];return 1!==this.valpha&&(e.alpha=this.valpha),e},unitArray(){const e=this.rgb().color;return e[0]/=255,e[1]/=255,e[2]/=255,1!==this.valpha&&e.push(this.valpha),e},unitObject(){const e=this.rgb().object();return e.r/=255,e.g/=255,e.b/=255,1!==this.valpha&&(e.alpha=this.valpha),e},round(e){return e=Math.max(e||0,0),new s([...this.color.map(c(e)),this.valpha],this.model)},alpha(e){return void 0!==e?new s([...this.color,Math.max(0,Math.min(1,e))],this.model):this.valpha},red:d("rgb",0,u(255)),green:d("rgb",1,u(255)),blue:d("rgb",2,u(255)),hue:d(["hsl","hsv","hsl","hwb","hcg"],0,(e=>(e%360+360)%360)),saturationl:d("hsl",1,u(100)),lightness:d("hsl",2,u(100)),saturationv:d("hsv",1,u(100)),value:d("hsv",2,u(100)),chroma:d("hcg",1,u(100)),gray:d("hcg",2,u(100)),white:d("hwb",1,u(100)),wblack:d("hwb",2,u(100)),cyan:d("cmyk",0,u(100)),magenta:d("cmyk",1,u(100)),yellow:d("cmyk",2,u(100)),black:d("cmyk",3,u(100)),x:d("xyz",0,u(95.047)),y:d("xyz",1,u(100)),z:d("xyz",2,u(108.833)),l:d("lab",0,u(100)),a:d("lab",1),b:d("lab",2),keyword(e){return void 0!==e?new s(e):o[this.model].keyword(this.color)},hex(e){return void 0!==e?new s(e):r.to.hex(this.rgb().round().color)},hexa(e){if(void 0!==e)return new s(e);const n=this.rgb().round().color;let t=Math.round(255*this.valpha).toString(16).toUpperCase();return 1===t.length&&(t="0"+t),r.to.hex(n)+t},rgbNumber(){const e=this.rgb().color;return(255&e[0])<<16|(255&e[1])<<8|255&e[2]},luminosity(){const e=this.rgb().color,n=[];for(const[t,r]of e.entries()){const e=r/255;n[t]=e<=.04045?e/12.92:((e+.055)/1.055)**2.4}return.2126*n[0]+.7152*n[1]+.0722*n[2]},contrast(e){const n=this.luminosity(),t=e.luminosity();return n>t?(n+.05)/(t+.05):(t+.05)/(n+.05)},level(e){const n=this.contrast(e);return n>=7?"AAA":n>=4.5?"AA":""},isDark(){const e=this.rgb().color;return(2126*e[0]+7152*e[1]+722*e[2])/1e4<128},isLight(){return!this.isDark()},negate(){const e=this.rgb();for(let n=0;n<3;n++)e.color[n]=255-e.color[n];return e},lighten(e){const n=this.hsl();return n.color[2]+=n.color[2]*e,n},darken(e){const n=this.hsl();return n.color[2]-=n.color[2]*e,n},saturate(e){const n=this.hsl();return n.color[1]+=n.color[1]*e,n},desaturate(e){const n=this.hsl();return n.color[1]-=n.color[1]*e,n},whiten(e){const n=this.hwb();return n.color[1]+=n.color[1]*e,n},blacken(e){const n=this.hwb();return n.color[2]+=n.color[2]*e,n},grayscale(){const e=this.rgb().color,n=.3*e[0]+.59*e[1]+.11*e[2];return s.rgb(n,n,n)},fade(e){return this.alpha(this.valpha-this.valpha*e)},opaquer(e){return this.alpha(this.valpha+this.valpha*e)},rotate(e){const n=this.hsl();let t=n.color[0];return t=(t+e)%360,t=t<0?360+t:t,n.color[0]=t,n},mix(e,n){if(!e||!e.rgb)throw new Error('Argument to "mix" was not a Color instance, but rather an instance of '+typeof e);const t=e.rgb(),r=this.rgb(),o=void 0===n?.5:n,a=2*o-1,i=t.alpha()-r.alpha(),l=((a*i==-1?a:(a+i)/(1+a*i))+1)/2,c=1-l;return s.rgb(l*t.red()+c*r.red(),l*t.green()+c*r.green(),l*t.blue()+c*r.blue(),t.alpha()*o+r.alpha()*(1-o))}};for(const e of Object.keys(o)){if(a.includes(e))continue;const{channels:n}=o[e];s.prototype[e]=function(...n){return this.model===e?new s(this):n.length>0?new s(n,e):new s([...(t=o[this.model][e].raw(this.color),Array.isArray(t)?t:[t]),this.valpha],e);var t},s[e]=function(...t){let r=t[0];return"number"==typeof r&&(r=A(t,n)),new s(r,e)}}function c(e){return function(n){return function(e,n){return Number(e.toFixed(n))}(n,e)}}function d(e,n,t){e=Array.isArray(e)?e:[e];for(const r of e)(l[r]||(l[r]=[]))[n]=t;return e=e[0],function(r){let o;return void 0!==r?(t&&(r=t(r)),o=this[e](),o.color[n]=r,o):(o=this[e]().color[n],t&&(o=t(o)),o)}}function u(e){return function(n){return Math.max(0,Math.min(e,n))}}function A(e,n){for(let t=0;t<n;t++)"number"!=typeof e[t]&&(e[t]=0);return e}e.exports=s},28:(e,n,t)=>{"use strict";t.d(n,{Z:()=>l});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@500&display=swap);"]),i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300&display=swap);"]),i.push([e.id,':root {\n  --header-color: #0d9488;\n  --header-text-color: white;\n  --nav-color: #2dd4bf;\n  --nav-text-color: white;\n  --page-color: #ccfbf1;\n  --page-text-color: white;\n}\n\n.no-select {\n  user-select: none;\n  -webkit-user-select: none; /* Safari and Chrome */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer and Edge */\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#container {\n  height: 100dvh;\n  display: grid;\n  grid-template-rows: 1.5fr 14.5fr 1fr;\n}\n\n#header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: var(--header-color);\n  color: var(--header-text-color);\n}\n#body {\n  display: grid;\n  grid-template-columns: 1fr 8fr;\n}\n#nav {\n  display: flex;\n  flex-direction: column;\n  padding-top: 100px;\n  gap: 60px;\n  max-width: 200px;\n  min-width: 150px;\n  background-color: var(--nav-color);\n  color: var(--nav-text-color);\n}\n#page {\n  background-color: var(--page-color);\n  color: var(--page-text-color);\n  font-family: "Plus Jakarta Sans", sans-serif;\n  color: black;\n}\n#footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--header-color);\n}\n\n/*=====HEADER STUFF=======*/\n.logo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 26px;\n  padding: 10px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n.user-profile {\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n\n/*=====NAVIGATION MENU=======*/\n.nav-item-container,\n.nav-setting-container {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 15%;\n}\n.nav-item {\n  font-size: 20px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n  padding: 8px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transition: transform 0.6s;\n  animation-timing-function: ease-in-out;\n}\n.nav-active {\n  background-color: var(--header-color);\n  transform: translateX(14px);\n  opacity: 1;\n}\n/*=====PAGES=======*/\n#page.settings,\n#page.journal,\n#page.reminders,\n#page.about-us {\n  padding: 20px 30px 20px 30px;\n}\n#page-content-container {\n  margin-top: 10px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: scroll;\n}\n.page-title {\n  color: black;\n  font-size: 36px;\n}\n/*=====REMINDERS PAGE=======*/\n.reminder-controls-container {\n  display: flex;\n  justify-content: space-between;\n}\n.filter-container {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 6px 4px 6px;\n  border-radius: 8px;\n  background-color: var(--nav-color);\n  color: white;\n}\n.reminder-filter-select {\n  background-color: var(--header-color);\n  color: white;\n  border: none;\n  font-size: 16px;\n  border-radius: 6px;\n  padding: 2px 4px 2px 4px;\n  outline: none;\n}\n.add-reminder-button {\n  background-color: var(--nav-color);\n  border: none;\n  color: white;\n  font-size: 18px;\n  padding: 6px 10px 6px 10px;\n  border-radius: 10px;\n}\n.add-reminder-button:hover {\n  background-color: var(--header-color);\n}\n/* Styles for the form container */\n#reminderForm {\n  display: grid;\n  position: absolute;\n  top: 20px;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(3, auto) 1fr;\n  gap: 10px;\n  background-color: var(--nav-color);\n  padding: 10px;\n  border-radius: 10px;\n  margin-top: 20px;\n  max-width: 260px;\n  opacity: 0; /* Initial opacity set to 0 */\n  transform: scaleY(0); /* Initial scale set to 0 */\n  transition: transform 0.25s ease-in, opacity 0.25s ease-in;\n}\n#reminderForm.animate {\n  transform: scaleY(1);\n  opacity: 1;\n}\n/* Styles for the last row containing the priority item and the two buttons */\n#reminderForm .priority-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n}\n#reminderForm textarea,\n#reminderForm input {\n  resize: none;\n  outline: none;\n  border: none;\n  border-radius: 2px;\n}\n#reminderForm textarea,\n#reminderForm input,\n#reminderForm button {\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n\n#reminderForm button {\n  font-size: 12px;\n  border: none;\n  margin-left: 3px;\n  border-radius: 6px;\n  padding-bottom: 2px;\n}\n#reminderForm button:nth-child(1):hover {\n  background-color: red;\n  color: white;\n}\n#reminderForm button:nth-child(2):hover {\n  background-color: var(--header-color);\n  color: white;\n}\n#reminderForm label input[type="date"],\n#reminderForm .priority-container label select {\n  margin-left: 4px;\n}\n\n.today-container,\n.due-later-container,\n.overdue-container {\n  margin-top: 14px;\n}\n.reminder-container {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  transition: height 0.5s ease;\n  overflow: hidden;\n}\n\n.reminder-title-small {\n  font-size: 24px;\n  padding-bottom: 6px;\n  border-bottom: 1px solid black;\n  display: flex;\n  justify-content: space-between;\n  margin-right: 12px;\n  margin-bottom: 6px;\n}\n.reminder-title-small svg {\n  transform: rotate(180deg);\n  width: 18px;\n  margin-top: 10px;\n}\n.reminder {\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  border-radius: 6px;\n  padding-right: 10px;\n  height: fit-content;\n  background-color: rgba(0, 0, 0, 0.15);\n  transition: height 0.5s;\n  overflow: hidden;\n}\n.reminder-text-container {\n  margin-left: 4px;\n}\n.reminder-box-title {\n  font-size: 18px;\n  margin-right: 6px;\n  line-height: 30px;\n}\n.reminder-box-description {\n  font-size: 16px;\n  font-style: italic;\n  line-height: 30px;\n  color: white;\n}\n.dim {\n  opacity: 0.3;\n}\n\n/*=====SETTINGS PAGE=======*/\n.color-scheme-container {\n  margin-left: 20px;\n  margin-top: 20px;\n}\n.color-scheme-title {\n  font-size: 20px;\n  margin-left: 6px;\n  margin-bottom: 8px;\n}\n.color-container {\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.15);\n  border-radius: 10px;\n  max-width: 450px;\n  padding: 10px;\n  overflow: scroll;\n}\n.color-choice {\n  min-width: 114px;\n  height: 80px;\n  margin: 10px;\n  border-radius: 10px;\n  border: 1px solid white;\n}\n\n/*=====FOOTER=======*/\n.footer-content {\n  color: var(--header-text-color);\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"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",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@500&display=swap");\n@import url("https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@300&display=swap");\n\n:root {\n  --header-color: #0d9488;\n  --header-text-color: white;\n  --nav-color: #2dd4bf;\n  --nav-text-color: white;\n  --page-color: #ccfbf1;\n  --page-text-color: white;\n}\n\n.no-select {\n  user-select: none;\n  -webkit-user-select: none; /* Safari and Chrome */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer and Edge */\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n#container {\n  height: 100dvh;\n  display: grid;\n  grid-template-rows: 1.5fr 14.5fr 1fr;\n}\n\n#header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: var(--header-color);\n  color: var(--header-text-color);\n}\n#body {\n  display: grid;\n  grid-template-columns: 1fr 8fr;\n}\n#nav {\n  display: flex;\n  flex-direction: column;\n  padding-top: 100px;\n  gap: 60px;\n  max-width: 200px;\n  min-width: 150px;\n  background-color: var(--nav-color);\n  color: var(--nav-text-color);\n}\n#page {\n  background-color: var(--page-color);\n  color: var(--page-text-color);\n  font-family: "Plus Jakarta Sans", sans-serif;\n  color: black;\n}\n#footer {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--header-color);\n}\n\n/*=====HEADER STUFF=======*/\n.logo {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 26px;\n  padding: 10px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n.user-profile {\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n\n/*=====NAVIGATION MENU=======*/\n.nav-item-container,\n.nav-setting-container {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin-left: 15%;\n}\n.nav-item {\n  font-size: 20px;\n  font-family: "Plus Jakarta Sans", sans-serif;\n  padding: 8px;\n  border-top-left-radius: 5px;\n  border-bottom-left-radius: 5px;\n  border-top-right-radius: 20px;\n  border-bottom-right-radius: 20px;\n  transition: transform 0.6s;\n  animation-timing-function: ease-in-out;\n}\n.nav-active {\n  background-color: var(--header-color);\n  transform: translateX(14px);\n  opacity: 1;\n}\n/*=====PAGES=======*/\n#page.settings,\n#page.journal,\n#page.reminders,\n#page.about-us {\n  padding: 20px 30px 20px 30px;\n}\n#page-content-container {\n  margin-top: 10px;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: scroll;\n}\n.page-title {\n  color: black;\n  font-size: 36px;\n}\n/*=====REMINDERS PAGE=======*/\n.reminder-controls-container {\n  display: flex;\n  justify-content: space-between;\n}\n.filter-container {\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  padding: 4px 6px 4px 6px;\n  border-radius: 8px;\n  background-color: var(--nav-color);\n  color: white;\n}\n.reminder-filter-select {\n  background-color: var(--header-color);\n  color: white;\n  border: none;\n  font-size: 16px;\n  border-radius: 6px;\n  padding: 2px 4px 2px 4px;\n  outline: none;\n}\n.add-reminder-button {\n  background-color: var(--nav-color);\n  border: none;\n  color: white;\n  font-size: 18px;\n  padding: 6px 10px 6px 10px;\n  border-radius: 10px;\n}\n.add-reminder-button:hover {\n  background-color: var(--header-color);\n}\n/* Styles for the form container */\n#reminderForm {\n  display: grid;\n  position: absolute;\n  top: 20px;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(3, auto) 1fr;\n  gap: 10px;\n  background-color: var(--nav-color);\n  padding: 10px;\n  border-radius: 10px;\n  margin-top: 20px;\n  max-width: 260px;\n  opacity: 0; /* Initial opacity set to 0 */\n  transform: scaleY(0); /* Initial scale set to 0 */\n  transition: transform 0.25s ease-in, opacity 0.25s ease-in;\n}\n#reminderForm.animate {\n  transform: scaleY(1);\n  opacity: 1;\n}\n/* Styles for the last row containing the priority item and the two buttons */\n#reminderForm .priority-container {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 10px;\n}\n#reminderForm textarea,\n#reminderForm input {\n  resize: none;\n  outline: none;\n  border: none;\n  border-radius: 2px;\n}\n#reminderForm textarea,\n#reminderForm input,\n#reminderForm button {\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n\n#reminderForm button {\n  font-size: 12px;\n  border: none;\n  margin-left: 3px;\n  border-radius: 6px;\n  padding-bottom: 2px;\n}\n#reminderForm button:nth-child(1):hover {\n  background-color: red;\n  color: white;\n}\n#reminderForm button:nth-child(2):hover {\n  background-color: var(--header-color);\n  color: white;\n}\n#reminderForm label input[type="date"],\n#reminderForm .priority-container label select {\n  margin-left: 4px;\n}\n\n.today-container,\n.due-later-container,\n.overdue-container {\n  margin-top: 14px;\n}\n.reminder-container {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  transition: height 0.5s ease;\n  overflow: hidden;\n}\n\n.reminder-title-small {\n  font-size: 24px;\n  padding-bottom: 6px;\n  border-bottom: 1px solid black;\n  display: flex;\n  justify-content: space-between;\n  margin-right: 12px;\n  margin-bottom: 6px;\n}\n.reminder-title-small svg {\n  transform: rotate(180deg);\n  width: 18px;\n  margin-top: 10px;\n}\n.reminder {\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  justify-content: space-between;\n  border-radius: 6px;\n  padding-right: 10px;\n  height: fit-content;\n  background-color: rgba(0, 0, 0, 0.15);\n  transition: height 0.5s;\n  overflow: hidden;\n}\n.reminder-text-container {\n  margin-left: 4px;\n}\n.reminder-box-title {\n  font-size: 18px;\n  margin-right: 6px;\n  line-height: 30px;\n}\n.reminder-box-description {\n  font-size: 16px;\n  font-style: italic;\n  line-height: 30px;\n  color: white;\n}\n.dim {\n  opacity: 0.3;\n}\n\n/*=====SETTINGS PAGE=======*/\n.color-scheme-container {\n  margin-left: 20px;\n  margin-top: 20px;\n}\n.color-scheme-title {\n  font-size: 20px;\n  margin-left: 6px;\n  margin-bottom: 8px;\n}\n.color-container {\n  display: flex;\n  background-color: rgba(0, 0, 0, 0.15);\n  border-radius: 10px;\n  max-width: 450px;\n  padding: 10px;\n  overflow: scroll;\n}\n.color-choice {\n  min-width: 114px;\n  height: 80px;\n  margin: 10px;\n  border-radius: 10px;\n  border: 1px solid white;\n}\n\n/*=====FOOTER=======*/\n.footer-content {\n  color: var(--header-text-color);\n  font-family: "Plus Jakarta Sans", sans-serif;\n}\n'],sourceRoot:""}]);const l=i},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var d=[].concat(e[c]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},537:e=>{"use strict";e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},171:e=>{e.exports=function(e){return!(!e||"string"==typeof e)&&(e instanceof Array||Array.isArray(e)||e.length>=0&&(e.splice instanceof Function||Object.getOwnPropertyDescriptor(e,e.length-1)&&"String"!==e.constructor.name))}},851:(e,n,t)=>{"use strict";var r=t(171),o=Array.prototype.concat,a=Array.prototype.slice,i=e.exports=function(e){for(var n=[],t=0,i=e.length;t<i;t++){var l=e[t];r(l)?n=o.call(n,a.call(l)):n.push(l)}return n};i.wrap=function(e){return function(){return e(i(arguments))}}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],l=0;l<e.length;l++){var s=e[l],c=r.base?s[0]+r.base:s[0],d=a[c]||0,u="".concat(c," ").concat(d);a[c]=d+1;var A=t(u),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(m);else{var p=o(m,r);r.byIndex=l,n.splice(l,0,{identifier:u,updater:p,references:1})}i.push(u)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var l=t(a[i]);n[l].references--}for(var s=r(e,o),c=0;c<a.length;c++){var d=t(a[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=s}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0;var r={};(()=>{"use strict";t.d(r,{D:()=>w});var e=t(379),n=t.n(e),o=t(795),a=t.n(o),i=t(569),l=t.n(i),s=t(565),c=t.n(s),d=t(216),u=t.n(d),A=t(589),m=t.n(A),p=t(28),h={};h.styleTagTransform=m(),h.setAttributes=c(),h.insert=l().bind(null,"head"),h.domAPI=a(),h.insertStyleElement=u(),n()(p.Z,h),p.Z&&p.Z.locals&&p.Z.locals;var g=t(767),f=t.n(g);const C=(()=>{const e=()=>{document.querySelectorAll(".reminder-title-small").forEach((e=>{const n=(new DOMParser).parseFromString('<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path fill="currentColor" d="m2.5 15.25l7.5-7.5l7.5 7.5l1.5-1.5l-9-9l-9 9z"/></svg>',"image/svg+xml").documentElement;n.id="collapse-icon",e.appendChild(n),e.classList.add("no-select")}))},n=e=>{const n={red:1,yellow:2,green:3},t=e=>{const[n,t,r]=e.split("/");return new Date(r,n-1,t)},r=Array.from(e.querySelectorAll(".reminder"));r.sort(((e,r)=>{const o=e.style.borderRight.slice(10),a=r.style.borderRight.slice(10),i=n[o]-n[a];return 0!==i?i:t(e.querySelector(".reminder-box-due-date").innerText)-t(r.querySelector(".reminder-box-due-date").innerText)})),e.innerHTML="",r.forEach((n=>e.appendChild(n)))},t=(e,t,r)=>{const o=((e,n)=>document.querySelector({date:{today:".today-container",overdue:".overdue-container",dueLater:".due-later-container"},priority:{Red:".today-container",Yellow:".due-later-container",Green:".overdue-container"}}[e][n]))(e,t),a=o.querySelector(".reminder-container");a.appendChild(r),n(a)},r=(e,n,t)=>{e.forEach((e=>{t?e.classList.add(n):e.classList.remove(n)}))};return{addStructure:(e,n,t)=>{const r=document.createElement("div");"id"==n?r.id=t:"class"==n&&r.classList.add(t),e.appendChild(r)},addElement:(e,n,t,r)=>{const o=document.createElement("div");o.classList.add(t),null!=r&&o.classList.add(r),o.textContent=n,e.appendChild(o)},removeAllChild:e=>{for(;e.firstChild;)e.removeChild(e.firstChild)},getAncestorNode:function(e,n){let t=e;for(let e=0;e<n;e++){if(!t.parentNode)return null;t=t.parentNode}return t},refreshDivClass:(e,n)=>{document.querySelector(e).classList="",document.querySelector(e).classList.add(n)},addCollapseIcons:e,changeReminderContainerTitles:(n,t,r)=>{document.querySelector(".today-container .reminder-title-small").textContent=n,document.querySelector(".due-later-container .reminder-title-small").textContent=t,document.querySelector(".overdue-container .reminder-title-small").textContent=r,e()},sortReminders:n,updateColors:e=>{const n=e.getAttribute("data-color600"),t=e.getAttribute("data-color100"),r=(o=n,a=t,.5,f()(o).mix(f()(a),.5).hex());var o,a;document.documentElement.style.setProperty("--header-color",n),document.documentElement.style.setProperty("--nav-color",r),document.documentElement.style.setProperty("--page-color",t),localStorage.setItem("COLOR_SCHEME_H",n),localStorage.setItem("COLOR_SCHEME_N",r),localStorage.setItem("COLOR_SCHEME_P",t)},createReminderBoxPrompt:function(){const e=document.createElement("form");e.id="reminderForm",e.className="reminder-box-prompt";const n=document.createElement("input");n.type="text",n.name="title",n.placeholder="Title",n.className="form-item",e.appendChild(n);const t=document.createElement("textarea");t.name="description",t.placeholder="Description",t.className="form-item",e.appendChild(t);const r=document.createElement("label");r.textContent="Due date:";const o=document.createElement("input");o.type="date",o.name="dueDate",o.className="form-item",r.appendChild(o),e.appendChild(r);const a=document.createElement("div");a.className="priority-container";const i=document.createElement("label");i.textContent="Priority:";const l=document.createElement("select");l.name="priority",l.className="form-item",["Red","Yellow","Green"].forEach((e=>{const n=document.createElement("option");n.value=e,n.textContent=e,l.appendChild(n)})),i.appendChild(l),a.appendChild(i),e.appendChild(a);const s=document.createElement("div");s.className="form-item";const c=document.createElement("button");c.type="button",c.textContent="Cancel",c.onclick=()=>e.remove();const d=document.createElement("button");return d.type="submit",d.textContent="Confirm",s.appendChild(c),s.appendChild(d),a.appendChild(s),e},createReminder:(e,n,t,r)=>{const o=document.createElement("div");o.classList.add("reminder");const a=document.createElement("input");a.type="checkbox",a.classList.add("reminder-box-checkbox");const i=document.createElement("div");i.classList.add("reminder-text-container");const l=document.createElement("span");l.classList.add("reminder-box-title"),l.textContent=e;const s=document.createElement("span");s.classList.add("reminder-box-description"),s.textContent=n;const c=document.createElement("span");switch(c.classList.add("reminder-box-due-date"),c.textContent=t,i.appendChild(a),i.appendChild(l),i.appendChild(s),o.appendChild(i),o.appendChild(c),r){case"Red":o.style.borderRight="4px solid red";break;case"Yellow":o.style.borderRight="4px solid yellow";break;case"Green":o.style.borderRight="4px solid green"}return o},reformatDateString:function(e){if(""==e)return;const[n,t,r]=e.split("-");return`${t}/${r}/${n}`},getTodaysDateFormatted:function(){const e=new Date,n=e.getFullYear();return`${("0"+(e.getMonth()+1)).slice(-2)}/${("0"+e.getDate()).slice(-2)}/${n}`},getEarliestDate:function(e,n){return new Date(Date.parse(e))<new Date(Date.parse(n))?e:n},appendReminderByDate:(e,n,r)=>{const o=e===n?"today":C.getEarliestDate(e,n)===n?"overdue":"dueLater";t("date",o,r)},appendReminderByPriority:(e,n)=>{t("priority",e,n)},toggleReminderDim:e=>{const n=document.querySelectorAll(".reminder"),t=document.querySelectorAll(".reminder-title-small");r(n,"dim",e),r(t,"dim",e)}}})(),b=()=>{C.removeAllChild(document.getElementById(w.PAGE_ID)),C.refreshDivClass(`#${w.PAGE_ID}`,"settings"),C.addElement(document.getElementById(w.PAGE_ID),"Settings","page-title"),C.addStructure(document.getElementById(w.PAGE_ID),"id","page-content-container"),C.addStructure(document.getElementById("page-content-container"),"class","color-scheme-container"),C.addElement(document.querySelector(".color-scheme-container"),"Color Scheme:","color-scheme-title"),C.addStructure(document.querySelector(".color-scheme-container"),"class","color-container");const e=[{"#009688":"#B2DFDB"},{"#2196F3":"#BBDEFB"},{"#3F51B5":"#C5CAE9"},{"#F06292":"#F8BBD0"},{"#E91E63":"#F48FB1"},{"#FF9800":"#FFE0B2"},{"#FFC107":"#FFECB3"},{"#000000":"#D6D6D6"}];for(let n=0;n<e.length;n++)C.addStructure(document.querySelector(".color-container"),"class","color-choice");document.querySelectorAll(".color-choice").forEach(((n,t)=>{const r=e[t],o=Object.keys(r)[0],a=r[o];n.style.backgroundImage=`linear-gradient(-45deg, ${o}, ${a})`,n.setAttribute("data-color600",o),n.setAttribute("data-color100",a)}))},E=()=>{C.removeAllChild(document.getElementById(w.PAGE_ID)),C.refreshDivClass(`#${w.PAGE_ID}`,"journal"),C.addElement(document.getElementById(w.PAGE_ID),"Journal","page-title"),C.addStructure(document.getElementById(w.PAGE_ID),"id","page-content-container")},y=()=>{C.removeAllChild(document.getElementById(w.PAGE_ID)),C.refreshDivClass(`#${w.PAGE_ID}`,"reminders"),C.addElement(document.getElementById(w.PAGE_ID),"Reminders","page-title"),C.addStructure(document.getElementById(w.PAGE_ID),"id","page-content-container");const e=document.createElement("div");e.classList.add("reminder-controls-container");const n=document.createElement("button");n.textContent="+New",n.classList.add("add-reminder-button"),e.appendChild(n);const t=document.createElement("div");t.textContent="Filter by: ";const r=document.createElement("select");r.name="filter",r.classList.add("reminder-filter-select"),["Due Date","Priority"].forEach((e=>{const n=document.createElement("option");n.value=e,n.textContent=e,r.appendChild(n)}));const o=document.createElement("div");o.classList.add("filter-container"),o.appendChild(t),o.appendChild(r),e.appendChild(o),document.getElementById("page-content-container").appendChild(e);const a=document.createElement("div");a.classList.add("today-container"),document.getElementById("page-content-container").appendChild(a),C.addElement(document.querySelector(".today-container"),"Today","reminder-title-small"),C.addStructure(document.querySelector(".today-container"),"class","reminder-container");const i=document.createElement("div");i.classList.add("due-later-container"),document.getElementById("page-content-container").appendChild(i),C.addElement(document.querySelector(".due-later-container"),"Due Later","reminder-title-small"),C.addStructure(document.querySelector(".due-later-container"),"class","reminder-container");const l=document.createElement("div");l.classList.add("overdue-container"),document.getElementById("page-content-container").appendChild(l),C.addElement(document.querySelector(".overdue-container"),"Overdue","reminder-title-small"),C.addStructure(document.querySelector(".overdue-container"),"class","reminder-container"),C.addCollapseIcons(),x.loadAllReminders()},B=()=>{C.removeAllChild(document.getElementById(w.PAGE_ID)),C.refreshDivClass(`#${w.PAGE_ID}`,"about-us"),C.addElement(document.getElementById(w.PAGE_ID),"About Us","page-title"),C.addStructure(document.getElementById(w.PAGE_ID),"id","page-content-container")},x=(()=>{const e=()=>{switch(localStorage.getItem("CURRENT_PAGE")){case"Settings":b();break;case"Journal":E();break;case"Reminders":default:y();break;case"About Us":B()}};return{callStyles:()=>{document.querySelectorAll(".nav-item").forEach((e=>{e.textContent==localStorage.getItem("CURRENT_PAGE")&&e.classList.add("nav-active")})),e(),document.documentElement.style.setProperty("--header-color",localStorage.getItem("COLOR_SCHEME_H")),document.documentElement.style.setProperty("--nav-color",localStorage.getItem("COLOR_SCHEME_N")),document.documentElement.style.setProperty("--page-color",localStorage.getItem("COLOR_SCHEME_P"))},loadCurrentPage:e,loadAllReminders:()=>{const e=[document.querySelector(".today-container .reminder-container"),document.querySelector(".due-later-container .reminder-container"),document.querySelector(".overdue-container .reminder-container")];for(let e=0;e<localStorage.length;e++){const n=localStorage.key(e);if(n.startsWith("reminder-")){const e=localStorage.getItem(n),t=JSON.parse(e),r=`${t.title}: `,o=t.description,a=C.reformatDateString(t.dueDate),i=t.priority,l=C.getTodaysDateFormatted(),s=C.createReminder(r,o,a,i);C.appendReminderByDate(l,a,s)}}e.forEach((e=>C.sortReminders(e)))}}})(),v=(()=>{const e=e=>{const n=e.target;(e=>{e.classList.contains("color-choice")&&C.updateColors(e)})(n),((e,n)=>{const t=e.classList.contains("add-reminder-button"),r="new-active"!==e.id;if(t&&r){const n=C.createReminderBoxPrompt();document.getElementById("page-content-container").appendChild(n),setTimeout((()=>{n.classList.add("animate")}),10),e.id="new-active",C.toggleReminderDim(!0)}if("BUTTON"===e.tagName&&"submit"===e.type&&e.closest("form")&&"reminderForm"===e.closest("form").id){n.preventDefault();const t=new FormData(e.closest("form")),r={title:t.get("title"),description:t.get("description"),dueDate:t.get("dueDate"),priority:t.get("priority")},o=C.createReminder(`${r.title}: `,r.description,C.reformatDateString(r.dueDate),r.priority),a=C.reformatDateString(r.dueDate),i=C.getTodaysDateFormatted(),l=JSON.stringify(r),s=document.querySelector(".reminder-filter-select").value;console.log(r.priority),"Due Date"===s?C.appendReminderByDate(i,a,o):C.appendReminderByPriority(r.priority,o),localStorage.setItem(`reminder-${r.title}`,l),e.closest("form").remove(),document.getElementById("new-active").id="",C.toggleReminderDim(!1)}if("BUTTON"===e.tagName&&"Cancel"==e.textContent&&"reminderForm"===e.closest("form").id&&(C.toggleReminderDim(!1),document.getElementById("new-active").id=""),e.classList.contains("reminder-box-checkbox")){const n=C.getAncestorNode(e,2),t=n.querySelector(".reminder-box-title").textContent.slice(0,-2);localStorage.removeItem(`reminder-${t}`),n.remove()}if("collapse-icon"===e.id||"collapse-icon"===e.parentNode.id){const n="collapse-icon"==e.parentNode.id?C.getAncestorNode(e,3):C.getAncestorNode(e,2),t="collapse-icon"==e.parentNode.id?e.parentNode:e,r=n.querySelector(".reminder-container");r.classList.toggle("collapsed");const o=r.classList.contains("collapsed");if(t.style.transform=o?"rotate(360deg)":"rotate(180deg)",o){const e=r.getBoundingClientRect().height;r.style.height=`${e}px`,r.getBoundingClientRect(),r.style.height="0"}else r.style.height="auto"}})(n,e),"change"===e.type&&n.matches(".reminder-filter-select")&&(e=>{const n="Priority"===e.target.value,t={red:document.querySelector(".today-container .reminder-container"),yellow:document.querySelector(".due-later-container .reminder-container"),green:document.querySelector(".overdue-container .reminder-container")};document.querySelectorAll(".reminder").forEach((e=>{const r=e.cloneNode(!0);e.remove(),n&&t[e.style.borderRight.slice(10)].appendChild(r)})),C.changeReminderContainerTitles(n?"Reds":"Today",n?"Yellows":"Due Later",n?"Greens":"Overdue"),n||x.loadAllReminders()})(e)};return{initListeners:()=>{document.getElementById(w.NAV_ID).addEventListener("click",(e=>{const n=e.target;n.classList.contains("nav-item")&&(document.querySelectorAll(".nav-item").forEach((e=>{e.classList.remove("nav-active")})),n.classList.toggle("nav-active"),localStorage.setItem("CURRENT_PAGE",n.textContent),x.loadCurrentPage())})),(()=>{const n=document.getElementById(w.PAGE_ID);n.addEventListener("click",e),n.addEventListener("change",e)})()}}})(),w=(()=>{const e=document.getElementById("container"),n="header",t="body",r="nav",o="page",a="footer";return{createSkeleton:()=>{C.addStructure(e,"id",n),C.addStructure(e,"id",t),C.addStructure(document.getElementById(t),"id",r),C.addStructure(document.getElementById(r),"class","nav-item-container"),C.addStructure(document.getElementById(r),"class","nav-setting-container"),C.addStructure(document.getElementById(t),"id",o),C.addStructure(e,"id",a)},createAllElements:()=>{C.addElement(document.getElementById(n),"Todooz","logo"),C.addElement(document.getElementById(n),"User's Name","user-profile"),C.addElement(document.getElementById(a),"Copyright @ChrisOlsen 2023","footer-content"),C.addElement(document.querySelector(".nav-item-container"),"Reminders","nav-item"),C.addElement(document.querySelector(".nav-item-container"),"Journal","nav-item"),C.addElement(document.querySelector(".nav-setting-container"),"Settings","nav-item"),C.addElement(document.querySelector(".nav-setting-container"),"About Us","nav-item")},projectContainer:e,HEADER_ID:n,FOOTER_ID:a,PROJECT_BODY_ID:t,NAV_ID:r,PAGE_ID:o}})();w.createSkeleton(),w.createAllElements(),x.callStyles(),v.initListeners()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,